<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.xrks.bugs.postgresjdbc</groupId>
	<artifactId>postgresjdbc-preparedstmt-corruption</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<properties>
		<main.class>com.xrks.bugs.postgresjdbc.Main</main.class>
		
		<version.springframework>4.1.7.RELEASE</version.springframework>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.resources.sourceEncoding>UTF-8</project.resources.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.version.min>3.2</maven.version.min>
	</properties>
	
	<prerequisites>
		<maven>${maven.version.min}</maven>
	</prerequisites>
	
	<dependencies>
		<!-- JDBC Driver for Postgres -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.4-1205-jdbc42</version> <!-- Bad -->
			<!-- <version>9.4-1204-jdbc42</version> --> <!-- Good -->
			<!-- <version>9.4-1201-jdbc41</version> --> <!-- Good -->
		</dependency>		
	
		<!-- Logging API -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.10</version>
		</dependency>
		<!-- this is used to route "java commons logging" through slf4j (spring uses jcl) -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.10</version>
		</dependency>
		<!-- This provies the logback library for outputing slf4j logging -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
		</dependency>
		
		<!-- Spring Dependency Injection Primary Component -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${version.springframework}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Database layer -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${version.springframework}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>1.8.0.RELEASE</version>
			<exclusions>
				<!-- dupeclasses in aspectweaver from spring-aspects -->
				<exclusion>
					<groupId>org.aspectj</groupId>
					<artifactId>aspectjrt</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.3.8.Final</version>
		</dependency>
		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.19.0-GA</version>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<compilerArgs>
						<arg>-Xlint:all</arg>
						<arg>-Xlint:-rawtypes</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<!-- This lets you type "mvn spring-boot:run" to launch your project from within maven -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.2.5.RELEASE</version>
				<configuration>
					<mainClass>${main.class}</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
